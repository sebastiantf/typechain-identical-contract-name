/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
  BigNumberish,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type { Lock, LockInterface } from "../../../../../../lock2/Lock";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_unlockTime",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "when",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [],
    name: "unlockTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052604051610387380380610387833981810160405281019061002591906100af565b804210610067576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161005e9061015f565b60405180910390fd5b806000819055505061017f565b600080fd5b6000819050919050565b61008c81610079565b811461009757600080fd5b50565b6000815190506100a981610083565b92915050565b6000602082840312156100c5576100c4610074565b5b60006100d38482850161009a565b91505092915050565b600082825260208201905092915050565b7f556e6c6f636b2074696d652073686f756c6420626520696e207468652066757460008201527f7572650000000000000000000000000000000000000000000000000000000000602082015250565b60006101496023836100dc565b9150610154826100ed565b604082019050919050565b600060208201905081810360008301526101788161013c565b9050919050565b6101f98061018e6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063251c1aa31461003b5780633ccfd60b14610059575b600080fd5b610043610063565b6040516100509190610102565b60405180910390f35b610061610069565b005b60005481565b6000544210156100ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100a59061017a565b60405180910390fd5b7fbf2ed60bd5b5965d685680c01195c9514e4382e28e3a5a2d2d5244bf59411b9347426040516100df92919061019a565b60405180910390a1565b6000819050919050565b6100fc816100e9565b82525050565b600060208201905061011760008301846100f3565b92915050565b600082825260208201905092915050565b7f596f752063616e27742077697468647261772079657400000000000000000000600082015250565b600061016460168361011d565b915061016f8261012e565b602082019050919050565b6000602082019050818103600083015261019381610157565b9050919050565b60006040820190506101af60008301856100f3565b6101bc60208301846100f3565b939250505056fea2646970667358221220418c5db974b7f197bac1c471e5034a0bc50c0329521907f6eaa62d9f7014414564736f6c63430008120033";

type LockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Lock__factory extends ContractFactory {
  constructor(...args: LockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _unlockTime: PromiseOrValue<BigNumberish>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<Lock> {
    return super.deploy(_unlockTime, overrides || {}) as Promise<Lock>;
  }
  override getDeployTransaction(
    _unlockTime: PromiseOrValue<BigNumberish>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_unlockTime, overrides || {});
  }
  override attach(address: string): Lock {
    return super.attach(address) as Lock;
  }
  override connect(signer: Signer): Lock__factory {
    return super.connect(signer) as Lock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LockInterface {
    return new utils.Interface(_abi) as LockInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Lock {
    return new Contract(address, _abi, signerOrProvider) as Lock;
  }
}
